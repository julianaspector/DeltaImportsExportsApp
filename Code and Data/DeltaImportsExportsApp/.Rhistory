KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
library(xlsx)
install.packages("openxlsx")
library(openxlsx)
library(openxlsx)
# Read in new geodatabase attribute table ----
gdb <- st_read("D:/Telework/Batch 3/POU_Tehama.gdb")
gdb <- st_sf(gdb)
# remove geometry columns
st_geometry(gdb) <- NULL
# rename columns that match the tracking spreadsheet so FillIn function will work
gdb <- gdb %>% rename(APPL_ID=Ap_ID,
Data_Conf_gdb = Data_Conf,
Conf_Notes_gdb = Conf_Notes,
Calc_Acr_gdb = Calc_Acr)
# Assign APPL_IDs to staff ----
gdb$Reviewer.one <- c(rep('Stanley', 29), rep('Juliana', 30), rep('Rob', 29))
gdb$Reviewer.two <- c(rep('Rob', 29), rep('Stanley', 30), rep('Juliana', 29))
gdb$Deliverable_status <- 'Yes'
# only select necessary columns from geodatabase attribute table
gdb <- gdb %>% select(APPL_ID,
Reviewer.one,
Reviewer.two,
Deliverable_status,
Data_Conf_gdb,
Conf_Notes_gdb,
Calc_Acr_gdb)
# Read in latest version of tracking spreadsheet after downloading ----
# Must include sheet index
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx',
sheetIndex = 1)
# Make replaced variables same types as target variables ----
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
gdb$Deliverable_status <- as.factor(gdb$Deliverable_status)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
# Apply FillIn function ----
# Do not have any cells with NA as character
complete <- FillIn(D1 = tracking,
D2 = gdb,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Deliverable",
Var2 = "Deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
# Read in latest version of tracking spreadsheet after downloading ----
# Must include sheet index
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx')
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
gdb$Deliverable_status <- as.factor(gdb$Deliverable_status)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
# Apply FillIn function ----
# Do not have any cells with NA as character
complete <- FillIn(D1 = tracking,
D2 = gdb,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Deliverable",
Var2 = "Deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
View(complete)
gdb <- st_read("D:/Telework/Batch 3/POU_Tehama.gdb")
gdb <- st_sf(gdb)
st_geometry(gdb) <- NULL
gdb <- gdb %>% rename(APPL_ID=Ap_ID,
Data_Conf_gdb = Data_Conf,
Conf_Notes_gdb = Conf_Notes,
Calc_Acr_gdb = Calc_Acr)
# Assign APPL_IDs to staff ----
gdb$Reviewer.one <- c(rep('Stanley', 29), rep('Juliana', 30), rep('Rob', 29))
gdb$Reviewer.two <- c(rep('Rob', 29), rep('Stanley', 30), rep('Juliana', 29))
gdb$Deliverable_status <- 'Yes'
# only select necessary columns from geodatabase attribute table
gdb <- gdb %>% select(APPL_ID,
Reviewer.one,
Reviewer.two,
Deliverable_status,
Data_Conf_gdb,
Conf_Notes_gdb,
Calc_Acr_gdb)
# Read in latest version of tracking spreadsheet after downloading ----
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx')
# Make replaced variables same types as target variables ----
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
gdb$Deliverable_status <- as.factor(gdb$Deliverable_status)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
gdb$Deliverable_status <- as.factor(gdb$Deliverable_status)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
tracking$Data_Conf <- as.factor(tracking$Data_Conf)
tracking$Conf_Notes <- as.factor(tracking$Conf_Notes)
complete <- FillIn(D1 = tracking,
D2 = gdb,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Deliverable",
Var2 = "Deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx')
# Make replaced variables same types as target variables ----
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
gdb$Deliverable_status <- as.factor(gdb$Deliverable_status)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
tracking$Data_Conf <- as.factor(tracking$Data_Conf)
tracking$Conf_Notes <- as.factor(tracking$Conf_Notes)
tracking$Deliverable <- as.factor(tracking$Deliverable)
complete <- FillIn(D1 = tracking,
D2 = gdb,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Deliverable",
Var2 = "Deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
View(complete)
length(complete$Reviewer.1 == 'NA')
complete$Reviewer.1 == 'NA'
count(complete$Reviewer.1 == 'NA')
sum(is.na(complete$Reviewer.1))
# Assign APPL_IDs not digitized
df$Reviewer.one <- c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7))
# Assign APPL_IDs not digitized
df$Reviewer.one <- data.frame(c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)))
# Assign APPL_IDs not digitized
df <- data.frame()
df$Reviewer.one <- c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7))
# Assign APPL_IDs not digitized
df <- data.frame(21,2)
View(df)
# Assign APPL_IDs not digitized
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)))
View(complete)
View(df)
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)))
View(df)
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
df$Reviewer.one <- as.character(df$Reviewer.one)
df$Reviewer.two <- as.character(df$Reviewer.two)
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete %>% filter(complete$Reviewer.1=='NA')
complete %>% filter(is.na(Reviewer.1))
complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID)
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
View(df)
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
df$Reviewer.one <- as.character(df$Reviewer.one)
df$Reviewer.two <- as.character(df$Reviewer.two)
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
View(complete)
write.xlsx(complete, "D:/Telework/R Code/POU/Deliverable Review Tracking_20200417.xlsx")
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = "No")
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No"), 21))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No", 21)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No", 21)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No", 21)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No", 21)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep("No", 21)))
df <- data.frame(Reviewer.one=c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep('No', 21)))
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep('No', 21)))
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID),
deliverable_status = c(rep('No', 21)))
gdb$Reviewer.one <- c(rep('Stanley', 29), rep('Juliana', 30), rep('Rob', 29))
gdb$Reviewer.two <- c(rep('Rob', 29), rep('Stanley', 30), rep('Juliana', 29))
gdb$Deliverable_status <- 'Yes'
gdb <- gdb %>% select(APPL_ID,
Reviewer.one,
Reviewer.two,
Deliverable_status,
Data_Conf_gdb,
Conf_Notes_gdb,
Calc_Acr_gdb)
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx')
# Make replaced variables same types as target variables ----
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
tracking$Data_Conf <- as.factor(tracking$Data_Conf)
tracking$Conf_Notes <- as.factor(tracking$Conf_Notes)
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
deliverable_status = c(rep('No', 21)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
library(sf) # for reading gdb attribute table
library(dplyr)
library(openxlsx)
library(DataCombine) # FillIn function
# Read in new geodatabase attribute table ----
gdb <- st_read("D:/Telework/Batch 3/POU_Tehama.gdb")
gdb <- st_sf(gdb)
# remove geometry columns
st_geometry(gdb) <- NULL
# rename columns that match the tracking spreadsheet so FillIn function will work
gdb <- gdb %>% rename(APPL_ID=Ap_ID,
Data_Conf_gdb = Data_Conf,
Conf_Notes_gdb = Conf_Notes,
Calc_Acr_gdb = Calc_Acr)
# Assign APPL_IDs to staff ----
gdb$Reviewer.one <- c(rep('Stanley', 29), rep('Juliana', 30), rep('Rob', 29))
gdb$Reviewer.two <- c(rep('Rob', 29), rep('Stanley', 30), rep('Juliana', 29))
gdb$Deliverable_status <- 'Yes'
# only select necessary columns from geodatabase attribute table
gdb <- gdb %>% select(APPL_ID,
Reviewer.one,
Reviewer.two,
Deliverable_status,
Data_Conf_gdb,
Conf_Notes_gdb,
Calc_Acr_gdb)
# Read in latest version of tracking spreadsheet after downloading ----
tracking <- read.xlsx('D:/Telework/R Code/POU/Deliverable Review Tracking_20200416.xlsx')
# Make replaced variables same types as target variables ----
tracking$Reviewer.1 <- as.character(tracking$Reviewer.1)
tracking$Reviewer.2 <- as.character(tracking$Reviewer.2)
tracking$Calc_Acr <- as.integer(tracking$Calc_Acr)
tracking$Data_Conf <- as.factor(tracking$Data_Conf)
tracking$Conf_Notes <- as.factor(tracking$Conf_Notes)
# Apply FillIn function ----
# Do not have any cells with NA as character
complete <- FillIn(D1 = tracking,
D2 = gdb,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Deliverable",
Var2 = "Deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Data_Conf",
Var2 = "Data_Conf_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Conf_Notes",
Var2 = "Conf_Notes_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = gdb,
Var1 = "Calc_Acr",
Var2 = "Calc_Acr_gdb",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
deliverable_status = c(rep('No'), 21),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
# Assign APPL_IDs not digitized
df <- data.frame(Reviewer.one = c(rep('Stanley', 7), rep('Juliana', 7), rep('Rob', 7)),
Reviewer.two = c(rep('Juliana', 7), rep('Rob', 7), rep('Stanley', 7)),
deliverable_status = c(rep('No', 21)),
APPL_ID = complete %>% filter(is.na(Reviewer.1)) %>% select(APPL_ID))
View(df)
df$deliverable_status <- as.character(df$deliverable_status)
df$Reviewer.one <- as.character(df$Reviewer.one)
df$Reviewer.two <- as.character(df$Reviewer.two)
df$deliverable_status <- as.character(df$deliverable_status)
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.1",
Var2 = "Reviewer.one",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Reviewer.2",
Var2 = "Reviewer.two",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
complete <- FillIn(D1 = complete,
D2 = df,
Var1 = "Deliverable",
Var2 = "deliverable_status",
KeyVar = c("APPL_ID"),
KeepD2Vars = "FALSE")
View(complete)
write.xlsx(complete, "D:/Telework/R Code/POU/Deliverable Review Tracking_20200417.xlsx")
install.packages("D:/Telework/baydeltautils.zip", repos=NULL, type="source")
library(baydeltautils)
remove.packages("baydeltautils", lib="~/R/win-library/3.6")
devtools::install_github("julianaspector/baydeltautils")
devtools::install_github("julianaspector/baydeltautils")
library(shiny)
runUrl("https://github.com/julianaspector/baydeltautils/baydeltautils.zip')
runUrl("https://github.com/julianaspector/baydeltautils/baydeltautils.zip")
runUrl("https://github.com/julianaspector/baydeltautils/blob/master/baydeltautils.zip")
setwd("C:/Users/Jules/Documents/GitHub/DeltaImportsExportsApp/Code and Data")
rsconnect::setAccountInfo(name='jjspector', token='DDD6BCB7EDAB7E85E58CDCA05FE21BFC', secret='GqGf1eUvzoaqHJ/75SyDC0nGqOVoGD5c0HHjN6JN')
library(rsconnect)
deployApp()
deployApp()
deployApp()
setwd('C:/Users/Jules/Documents/GitHub/DeltaImportsExportsApp')
deployApp()
setwd('C:/Users/Jules/Documents/GitHub/DeltaImportsExportsApp/Code and Data/DeltaImportsExportsApp')
deployApp()
